{"version":3,"sources":["components/Wrapper/index.js","components/HeroCard/index.js","components/NavBar/index.js","App.js","index.js"],"names":["Wrapper","props","id","children","HeroCard","className","onClick","selectCard","src","process","image","alt","name","NavBar","score","highScore","App","state","heros","sort","Math","random","foundIndex","findIndex","hero","selected","map","e","setState","this","key","React","Component","ReactDOM","render","document","getElementById"],"mappings":"kyCAaeA,MAVf,SAAkBC,GACd,OACI,yBAAKC,GAAG,WACJ,yBAAKA,GAAG,aACHD,EAAME,Y,MCKRC,MARf,SAAkBH,GACd,OACI,yBAAKI,UAAU,WAAWC,QAAS,kBAAML,EAAMM,WAAWN,EAAMC,MAC5D,yBAAKM,IAAKC,eAAyBR,EAAMS,MAAOC,IAAKV,EAAMW,S,MCaxDC,MAjBf,SAAgBZ,GACZ,OACI,6BACI,yBAAKC,GAAG,QAAR,gBAGA,yBAAKA,GAAG,gBAAR,sCACuC,6BADvC,6CAIA,yBAAKA,GAAG,SAAR,UAAuB,2BAAID,EAAMa,QACjC,yBAAKZ,GAAG,YAAR,cAA8B,2BAAID,EAAMc,cCgDrCC,E,2MAtDbC,MAAO,CACLC,QACA,MAAQ,EACR,UAAY,G,EAKhBX,WAAa,SAAAL,GAEX,IAAIgB,EAAQ,EAAKD,MAAMC,MAEvBA,EAAMC,KAAK,WAAa,MAAO,GAAMC,KAAKC,WAC1C,IAAMC,EAAaJ,EAAMK,UAAU,SAAAC,GAAI,OAAIA,EAAKtB,KAAOA,KAGpB,IAA/BgB,EAAMI,GAAYG,UAEpBP,EAAQA,EAAMQ,IAAI,SAAAC,GAEhB,OADAA,EAAEF,UAAW,EACNE,IAGT,EAAKC,SAAS,CAACd,MAAO,EAAGI,MAAOA,MAKhCA,EAAMI,GAAYG,UAAW,EAEzB,EAAKR,MAAMH,QAAU,EAAKG,MAAMF,UAClC,EAAKa,SAAS,CAACd,MAAO,EAAKG,MAAMH,MAAM,EAAGC,UAAW,EAAKE,MAAMH,MAAM,EAAGI,MAAOA,IAEhF,EAAKU,SAAS,CAACd,MAAO,EAAKG,MAAMH,MAAM,EAAGI,MAAOA,M,wEAK3C,IAAD,OACP,OAEE,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAQJ,MAAOe,KAAKZ,MAAMH,MAAOC,UAAWc,KAAKZ,MAAMF,YACvD,8BACGc,KAAKZ,MAAMC,MAAMQ,IAAI,SAAAF,GAAI,OACxB,kBAAC,EAAD,CAAUtB,GAAIsB,EAAKtB,GAAI4B,IAAKN,EAAKtB,GAAIQ,MAAOc,EAAKd,MAAOe,SAAUD,EAAKC,SAAUlB,WAAY,EAAKA,qB,GA9C5FwB,IAAMC,WCFxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.3eff1853.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Wrapper (props) {\r\n    return(\r\n        <div id=\"wrapper\">\r\n            <div id=\"container\">\r\n                {props.children} \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Wrapper;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\n\r\nfunction HeroCard(props) {\r\n    return (\r\n        <div className=\"heroCard\" onClick={() => props.selectCard(props.id)}>\r\n            <img src={process.env.PUBLIC_URL + props.image} alt={props.name}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HeroCard;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction NavBar(props) {\r\n    return (\r\n        <nav>\r\n            <div id=\"logo\">\r\n                Clicky Game!\r\n            </div>\r\n            <div id=\"instructions\">\r\n                Click on an image to earn points...<br></br>\r\n                but don't click any image more than once!\r\n            </div>\r\n            <div id=\"score\">Score: <b>{props.score}</b></div>\r\n            <div id=\"topScore\">Top Score: <b>{props.highScore}</b></div>\r\n\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default NavBar;","import React from 'react';\nimport './App.css';\nimport heros from \"./heros.json\";\nimport Wrapper from \"./components/Wrapper\";\nimport HeroCard from \"./components/HeroCard\";\nimport NavBar from \"./components/NavBar\";\n\nclass App extends React.Component {\n  state= {\n    heros,\n    \"score\":0,\n    \"highScore\":0\n  };\n\n  \n\nselectCard = id => {\n  // store heros and find index of selected hero\n  let heros = this.state.heros;\n  // shuffle array of heros\n  heros.sort(function() { return 0.5 - Math.random() });\n  const foundIndex = heros.findIndex(hero => hero.id === id);\n\n  // ALREADY SELECTED - END GAME AND RESET SELECTED PROPS\n  if (heros[foundIndex].selected === true){\n    // reset all heros selected to false\n    heros = heros.map(e => {\n      e.selected = false;\n      return e;\n    });\n    // reset current score\n    this.setState({score: 0, heros: heros});\n\n  // NOT ALREADY SELECTED - SET SELECTED, ADD TO SCORE, SET HIGH SCORE, SHUFFLE ARRAY\n  } else {\n    //set hero to selected\n    heros[foundIndex].selected = true;\n    // is current score high score?\n    if (this.state.score === this.state.highScore){\n      this.setState({score: this.state.score+1, highScore: this.state.score+1, heros: heros });      \n    } else {\n      this.setState({score: this.state.score+1, heros: heros})\n    } \n  }\n};\n\n  render() {\n    return (\n      \n      <Wrapper>\n        <NavBar score={this.state.score} highScore={this.state.highScore} />\n        <main>\n          {this.state.heros.map(hero => (\n            <HeroCard id={hero.id} key={hero.id} image={hero.image} selected={hero.selected} selectCard={this.selectCard}/>\n          ))}          \n        </main>\n\n      </Wrapper>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}